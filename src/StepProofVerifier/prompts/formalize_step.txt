Here is a C program, with some assertions to verify:

```c
{code}
```

To verify the assertion, here are the proposed loop invariants for the loop in the program:
```c
{invariant_block}
```

Here is a part of the proof:

{natural_proof}

For the step {step} in the above proof, formalize its logical content into first-order logic expressions. Follow these rules:

1. Focus only on {step}: Formalize **only** the step explicitly marked with {step}, and ignore other steps.
2. Formalization requirements:
    - Convert natural language claims into precise first-order logic formulas.
    - For each formula, represent it as an implication, using "==>" to represent.
    - The condition and the conclusion of the implication should be legal C logical expressions.
    - Each formula should be self-contained so that it can be checked.
3. Output format:
    - Output one implication in each line, following by a comment starting with "//" which matches the claim in the natural language proof.
    - Only output the implications and comments, do not explain.